- name: download {{ resourcebroker_gar }}
  get_url: url={{ resourcebroker_url }} dest=/tmp force=yes

- name: deploy {{ resourcebroker_gar  }}
  shell: export GLOBUS_LOCATION={{ globus_location }} ANT_HOME={{ ant_location }} && {{ globus_location }}/bin/gcore-deploy-service /tmp/{{ resourcebroker_gar }}

- name: add GLOBUS_OPTIONS to the gcore startup script
  lineinfile: dest="{{ globus_location }}/gcore-start.sh" insertbefore="^nohup" state=present line='export GLOBUS_OPTIONS="-Xms512M -Xmx1024M"'

- name: copy updated GHNConfig.xml
  template: src=GHNConfig.xml dest={{ globus_location }}/config/

#- name: update the resourcebroker jndi-config.xml, add start scopes when needed
#  lineinfile: dest="{{ globus_location }}/etc/{{ registry_artifact }}/jndi-config.xml" insertafter='.*?<service name="gcube/informationsystem/registry">' state=present line="                <environment name=\"startScopes\" value=\"{{ start_scopes }}\" type=\"java.lang.String\" override=\"false\" />"

- name: deploy {{ resourcebroker_serialization_artifact }}
  get_url: url={{ resourcebroker_serialization_url }} dest="{{ globus_location }}/lib/" force=yes

- name: deploy {{ resourcebroker_stubs_artifact }}
  get_url: url={{ resourcebroker_stubs_url }} dest="{{ globus_location }}/lib/" force=yes

- name: set logicalhost parameter on {{ globus_location }}/etc/globus_wsrf_core/server-config.wsdd
  replace: dest="{{ globus_location }}/etc/globus_wsrf_core/server-config.wsdd" regexp='localhost' replace="{{ resourcebroker_hostname }}"

- name: restore ownership
  file: dest={{ globus_location }} owner={{ ghn_user }}  group={{ ghn_user }} recurse=yes

- name: start gCore
  become: yes
  become_user: "{{ ghn_user }}"
  shell: "{{ globus_location }}/gcore-start.sh"
