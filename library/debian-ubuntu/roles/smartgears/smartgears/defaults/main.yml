---
gcube_repository: 'gcube-staging'
gcube_repository_stagin_test: 'gcube-staging-test'

# Set it to true from the command line when you want to upgrade a
# distribution version
smartgears_upgrade: False
smartgears_force_install: False
smartgears_remove_state: False

smartgears_node: True
smartgears_install_generic_virthost: True

smartgears_data_fs: /home
smartgears_user: '{{ d4science_user }}'
smartgears_user_home: '{{ d4science_user_home }}'
smartgears_instance_path: '{{ smartgears_user_home }}/tomcat'
smartgears_install_path: '{{ smartgears_user_home }}/SmartGears'
smartgears_distribution_version: 2.0.0-4.2.0-132475
smartgears_file: 'smartgears-distribution-{{ smartgears_distribution_version }}.tar.gz'
smartgears_url: 'http://maven.research-infrastructures.eu/nexus/content/repositories/{{ gcube_repository }}/org/gcube/distribution/smartgears-distribution/{{ smartgears_distribution_version }}/{{ smartgears_file }}'
smartgears_mode: online
smartgears_application_mode: online
# Production infra
smartgears_infrastructure_name: "d4science.research-infrastructures.eu"
smartgears_hostname: '{{ ansible_fqdn }}'
smartgears_country: it
smartgears_location: pisa
smartgears_latitude: 41.9000
smartgears_longitude: 12.5000
smartgears_publication_frequency: 180
smartgears_http_port: 9000
smartgears_service_name: 'tomcat-instance-{{ smartgears_http_port }}'

smartgears_loglevel: WARN

smartgears_tomcat_contexts: [ 'whn-manager' ]

smartgears_scopes:
  - '/{{ smartgears_infrastructure_name }}'

# The iptables rules use this
http_port: '{{ smartgears_http_port }}'

tomcat_m_webapps_unpack: True
tomcat_m_instances:
  - {  http_enabled: True, http_port: '{{ smartgears_http_port }}', http_address: '0.0.0.0', ajp_enabled: False, ajp_port: '8109', ajp_address: '127.0.0.1', restart_timeout: '{{ tomcat_m_restart_timeout }}', shutdown_port: '-1', java_home: '{{ jdk_java_home }}', user: '{{ smartgears_user }}', user_home: '{{ smartgears_user_home }}', user_shell: '{{ tomcat_m_default_user_shell }}', instance_path: '{{ smartgears_instance_path }}', max_threads: '{{ tomcat_m_max_threads }}', autodeploy: '{{ tomcat_m_webapps_autodeploy }}', unpack: '{{ tomcat_m_webapps_unpack }}', default_conf: True, java_opts: '{{ tomcat_m_java_opts }}', java_gc_opts: '{{ tomcat_m_java_gc_opts }}', other_java_opts: '{{ tomcat_m_other_java_opts }}', jmx_enabled: '{{ tomcat_m_jmx_enabled }}', jmx_disable_additional_ports: '{{ tomcat_m_jmx_disable_additional_ports }}', jmx_port: '{{ tomcat_m_jmx_port }}', jmx_use_ssl: '{{ tomcat_m_jmx_use_ssl }}', jmx_auth_enabled: '{{ tomcat_m_jmx_auth_enabled }}', jmx_auth_dir: '{{ tomcat_m_instances_base_path }}/{{ smartgears_http_port }}/conf', jmx_monitorpass: '{{ tomcat_m_jmx_monitorpass | default(omit) }}', jmx_controlpass: '{{ tomcat_m_jmx_controlpass | default(omit) }}', remote_debugging: '{{ tomcat_m_enable_remote_debugging }}', remote_debugging_port: '{{ smartgears_debugging_port }}' , access_log_enabled: True, log_rotation_freq: daily, log_retain: 30, allowed_hosts: [ '0.0.0.0/0' ], app_contexts: '{{ smartgears_tomcat_contexts }}', skip_smartgears: False, servername: '{{ ansible_fqdn }}' }

# To enable debugging:
# - Set
# tomcat_m_enable_remote_debugging: True
# Rerun the playbook using --tags=tomcat_default
#
smartgears_debugging_port: '{{ tomcat_m_remote_debugging_port }}'
# iptables:
#   tcp_rules: True
#   tcp:
#     - { port: '{{ smartgears_debugging_port }}', allowed_hosts: [ '{{ network.isti }}', '{{ network.nmis }}', '{{ network.eduroam }}' ] }
